{% extends "src/Bowling/Resources/views/layout.html.twig" %}

{%set menu = 'Journées' %}
{%set titre = 'journée' %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" type="text/css" href="//cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.2.0/css/datepicker.css">
{% endblock %}

{% block breadcrumb %}
    {{ parent() }}
    <li>{{ menu }}</li>
    <li>
        {% if form.vars.value.isNew is defined and form.vars.value.isNew %} 
            Ajout
        {% else %}
            Modification
        {% endif %}
    </li>
{% endblock %}

{% block content %}

    {% include 'app/Resources/views/fragments/titreMode.html.twig' with {'genre': 'f'} %}

    {{ form_start(form, { 'attr': { 'role': 'form', 'id': 'saisieJournee' }, 'method': 'post' }) }}
    {{ form_errors(form) }}
    {% include 'src/Bowling/Resources/views/score/formJournee.html.twig' %}
    {{ form_end(form) }}

    <div class="modal fade" id="erreur-doublon" tabindex="-1" role="dialog" aria-labelledby="Une erreur est survenue" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title">ATTENTION : JOURNEE DEJA SAISIE</h4>
                </div>
                <div class="modal-body"></div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal">OK</button>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}    
    {{parent()}}
    <script src="{{ baseRoutePrefix }}/libraries/bootstrap-datepicker-master/js/bootstrap-datepicker.js" type="text/javascript"></script>
    <script src="{{ baseRoutePrefix }}/libraries/bootstrap-datepicker-master/js/locales/bootstrap-datepicker.fr.js" type="text/javascript"></script>

    <script type="text/javascript">
        $(document).ready(function () {

            /*
             * ToDo
             // Contrôler et supprimer les signes "+" (plus) qui traînent dans les zones de saisie
             $(document).on('submit', '#saisieJournee', function (e) {
             alert('sousmis');
             var listeInputs = new Array();
             $('input[id*="_scores_"]').each(function () {
             alert($(this).val());
             listeInputs.push($(this).val());
             });
             console.log(listeInputs);
             return false;
             });
             */

            // Contrôle si jnée déjà saisie (même evt et date) :
            $(document).on("change", '#JourneeForm_evenement', function (e) {
                checkIfDoublon();
            });
            $(document).on("change", "#JourneeForm_dateJournee", function (e) {
                checkIfDoublon();
            });
            // ne pas saisir 2 fois la même journée
            function checkIfDoublon() {
                if ($('#JourneeForm_evenement').val() && $("#JourneeForm_dateJournee").val()) {

                    $.ajax({
                        dataType: "json",
                        method: "post",
                        cache: false,
                        url: "{{ path('bowling-journee-controle-doublon') }}",
                        data: {
                            'evenement': $('#JourneeForm_evenement').val(),
                            'dateJournee': $("#JourneeForm_dateJournee").val(),
                        },
                        success: function (data) {
                            if (data.ETAT == 'NOK') {
                                // message d'alerte pour saisie erronnée
                                $('#erreur-doublon .modal-body').html(data.DATA);
                                $('#erreur-doublon').modal('show');
                                // on efface les saisies (evt + date)
                                $('#JourneeForm_evenement').val('');
                                $("#JourneeForm_dateJournee").val('');
                            }
                        }
                    });
                }
                return false;
            }

            // Coche tous les checkBox sur carnet si evt = entrainement (contient 'carnet') :
            $(document).on("change", '#JourneeForm_evenement', function (e) {
                // pour chaque checkBox dont le nom se termine par '[surCarnetEntrainement]' :
                if ($("select[id='JourneeForm_evenement'] > option:selected").text().match('carnet')) {
                    $("input[name$='[surCarnetEntrainement]']").each(function (index) {
                        $(this).attr("checked", true);
                    });
                } else {
                    $("input[name$='[surCarnetEntrainement]']").each(function (index) {
                        $(this).attr("checked", false);
                    });
                }
            });
            // Enregistre et ajoute nvelle jnée (bouton 'JourneeForm_new') :
            $(document).on("click", '#JourneeForm_new', function (e) {
                $('#JourneeForm_nouvelleJnee').attr("checked", true);
                $('form').submit();
            });
            // désactive le submit du formulaire
            $('form').unbind();
            // La touche entrée renvoie tabulation
            // La touche '+' insère une nouvelle ligne de scrore
            $(document).on("keypress", function (e) {
                // touche "+" sur certaines colonnes = ajouter un nouveau score :
                if (
                        e.which === 43 &
                        Array.isArray(e.target.id.match(/score|strike|spare|split|gagnee|PasCalculMoyenne|surCarnetEntrainement|septDix/g))
                        ) {
                    // récup n° série du new score et ajout nouvelle ligne
                    noSerie = $(e.target).parents().find("table").data("serie");
                    $("#new-score_" + noSerie).click();
                }

                if (e.which === 13) {
                    e.preventDefault();
                    e.which = 9;
                    next = $(e.target).parents("tr > td").next();
                    next.children().find("input").focus();
                    return e.which;
                }
            });
            var DATE_PICKER_CONFIG = {
                autoclose: true,
                calendarWeeks: true,
                weekStart: 1,
                language: "fr",
                //clearBtn: true,
                //todayHighlight: true,
                //todayBtn: "linked",
                daysOfWeekHighlighted: '06',
                startDate: "{{ periode.dtDeb|date('d/m/Y') }}",
                endDate: "{{ periode.dtFin|date('d/m/Y') }}"
            };
            $(".datepicker").datepicker(DATE_PICKER_CONFIG);
            // MàJ des bornes du datepicker
            $(document).on("focus", ".datepicker", function (e) {
                e.preventDefault();
                var dateStart = $("#JourneeForm_dateJournee").datepicker('getDate', '-3d');
                dateStart.setDate(dateStart.getDate() - 3);
                var dateEnd = $("#JourneeForm_dateJournee").datepicker('getDate');
                $(".dateSerie").datepicker(DATE_PICKER_CONFIG)
                        .datepicker("setStartDate", dateStart)
                        .datepicker("setEndDate", dateEnd);
                //.datepicker("setDate", dateEnd);
                return false;
            });
            $(document).on("change", "#JourneeForm_dateJournee", function (e) {
                e.preventDefault();
                // Date de la série 1 = celle de la journée, par défaut
                $("#JourneeForm_series_0_dateSerie").
                        attr("value", toStringDate($("#JourneeForm_dateJournee").
                                datepicker('getDate')));
                // Focus sur le 1er input de score
                $('#JourneeForm_dateJournee').parents().find('tr:eq(1) > td:eq(1) > div > input').focus();
                return false;
            });
            // supression d'une ligne de score
            $(document).on("click", ".deleteRow", function (e) {
                e.preventDefault();
                $(this).parent().parent("tr").remove();
            });
            // chargement d'une nouvelle série à saisir via le click sur le lien "ajouter une série"
            $(document).on("click", ".new-serie", function (e) {
                e.preventDefault();
                // récupération du dernier n° de série (id et valeur du champ)
                var newNumSerie = parseInt($(this).attr('id').substr(10));
                // va chercher le prototype qui défini la série
                var prototype = $('#container-serie').data('prototype-sr');
                // màj des données du prototype avant ajout
                prototype = prototype.replace(/__name__/g, newNumSerie);
                // màj des id des divers liens
                prototype = prototype.replace('id="new-serie_', 'id="new-serie_' + (newNumSerie + 1));
                prototype = prototype.replace('id="moyenneSerie-', 'id="moyenneSerie-' + (newNumSerie + 1));
                prototype = prototype.replace('id="new-score_', 'id="new-score_' + (newNumSerie + 1));
                prototype = prototype.replace('id="container-score_', 'id="container-score_' + (newNumSerie + 1));
                //console.log(prototype);
                prototype = prototype.replace('data-serie="', 'data-serie="' + (newNumSerie + 1));
                //console.log(prototype);
                // ajout nouvelle série en haut, basé sur le prototype
                $('#container-serie').prepend(prototype);
                // MàJ complémentaire après génération HTML
                // MàJ valeur input du n° de série
                $("#JourneeForm_series_" + newNumSerie + "_noSerie").attr("value", (newNumSerie + 1));
                // Date de la nouvelle série = celle de la journée, par défaut
                $("#JourneeForm_series_" + newNumSerie + "_dateSerie").
                        attr("value", toStringDate($("#JourneeForm_dateJournee").
                                datepicker('getDate')));
                // puis ajout nouvelle ligne de score
                $("#new-score_" + (newNumSerie + 1)).click();
                return false;
            });
            /* chargement de la nouvelle ligne de score à saisir 
             via le click sur le lien "new-score"
             ou appui de la touche "+" sur une ligne de saisie (score, strike, spare, ...)
             */
            $(document).on("click", ".new-score", function (e) {
                e.preventDefault();
                //va chercher le prototype qui défini la ligne
                var s = $(this).attr('id');
                // récup du n° de la série pour construire l'id du prototype
                var proto = '#container-score_' + parseInt(s.substring(s.search("_") + 1));
                var prototype = $(proto).data('prototype-sc');
                // MàJ Prototype score pour la variable __name__ perdue !
                // dans l'id
                prototype = prototype.replace(/_scores_\d+/g, '_scores___name__');
                // dans le name
                prototype = prototype.replace(/\[scores\]\[\d+\]/g, '[scores][__name__]');
                // et enfin, remplace la variable "__name__" par le n° de ligne courant
                prototype = prototype.replace(/__name__/g, $(proto + " > tr").length);
                // ajout de la ligne de score en bas du tableau de la série
                $(proto).append(prototype);
                $(proto + " tr:last > td:first").text('Partie ' + $(proto + " > tr").length);
                // check éventuel de la case sur carnet (selon type d'évènement)
                if ($("select[id='JourneeForm_evenement'] > option:selected").text().match('carnet')) {
                    $(proto + " .dataEntrainement:last > div > input").attr("checked", true);
                }

                // et enfin focus sur le nouveau champ input score
                $(proto + " .dataScore:last > div > input").focus();
                return false;
            });
            /*  Recalcul de la moyenne de la journée et de la série si score modifié */
            $(document).on("change", ".dataScore > div > input", function (e) {
                e.preventDefault();
                // récup du n° de la série et de la balise moyenne série
                var tableScores = $(this).parents().find('table:first');
                var numSerie = tableScores.data("serie");
                var moySerie = $(this).parents().find('#moyenneSerie-' + numSerie);
                // Moyenne des scores de la journée
                var i = cum = 0;
                // pour chaque input dont le nom se termine par '[score]' :
                $("input[name$='[score]']").each(function (index) {
                    i++;
                    cum += parseFloat($(this).val());
                });
                // MàJ de l'affichage de la moyenne de la journée
                $('#moyenneJnee').text((cum / i).toFixed(2));
                // Moyenne des scores de la série
                var i = cum = 0;
                //console.log(tableScores.find("[data-serie='" + numSerie + "']"));
                //console.log(tableScores.find("[data-serie='" + numSerie + "']").find("input[name$='[score]']"));
                tableScores.find("[data-serie='" + numSerie + "']").find("input[name$='[score]']").each(function (index) {
                    i++;
                    cum += parseFloat($(this).val());
                    //console.log('Série : ' + $(this).val() + '<br>');
                });
                // MàJ de l'affichage de la moyenne de la série
                $(moySerie).text((cum / i).toFixed(2));
                return false;
            });
            function toStringDate(dateObject) {

                var jour = dateObject.getDate();
                var mois = dateObject.getMonth() + 1;
                var an = dateObject.getFullYear();
                return Right('00' + jour, 2) + "/" + Right('00' + mois, 2) + "/" + an;
            }
            function Right(str, n) {

                if (n <= 0)
                    return "";
                else if (n > String(str).length)
                    return str;
                else {
                    var iLen = String(str).length;
                    return String(str).substring(iLen, iLen - n);
                }
            }

        });

    </script>
{% endblock %}
